import funkin.modding.module.Module;
import funkin.graphics.FunkinSprite;
import funkin.Paths;
import funkin.util.Constants;
import funkin.Highscore;
import flixel.FlxG;
import flixel.tweens.FlxTween;
import flixel.tweens.FlxEase;
import funkin.play.scoring.Scoring;
import funkin.Conductor;
import funkin.play.PlayState;

class customRatings extends Module
{
    var killer:Int; //tbh idk put this stick with sick rating so it won't effect killer count yeah!!!
    function onNoteHit(event:HitNoteScriptEvent)
    {
        super.onNoteHit(event);
        
        var daRating = judgeNote(event.noteDiff);
        if(daRating == 'killer')
        {
            event.healthChange = Constants.HEALTH_KILLER_BONUS; //heh why not troll :-:
            //event.isComboBreak = false;
            popUpScore("killer");
            applyScore("killer");
        }
    }

    function applyScore(daRating:String)
    {
        if(daRating == "killer")
            killer += 1;

        Highscore.tallies.sick += killer;
    }

    function onNoteMiss(event:NoteScriptEvent)
    {
        if (PlayState.instance == null) return;
        var game = PlayState.instance;

        game.comboPopUps.displayRating('miss');  // miss just miss
        game.comboPopUps.displayCombo(Highscore.tallies.missed);
    }

    function popUpScore(daRating:String)
    {
        if (PlayState.instance == null) return;
        var game = PlayState.instance;
        switch(daRating)
        {
            case 'killer':
                //Killer is Animated Sprite I do believe
                var rating:FunkinSprite = FunkinSprite.createSparrow(0, 0, 'killer');
                rating.animation.addByPrefix('idle', 'killer0', 24, true);
                rating.animation.play('idle', true);
                rating.scrollFactor.set(0.2, 0.2);
                rating.zIndex = 1000;
                rating.x = (FlxG.width * 0.474) + game.comboPopUps.offsets[0];
                rating.y = (FlxG.camera.height * 0.45 - 60) + game.comboPopUps.offsets[1];
                rating.acceleration.y = 550;
                rating.velocity.y -= FlxG.random.int(140, 175);
                rating.velocity.x -= FlxG.random.int(0, 10);
                rating.setGraphicSize(Std.int(rating.width * 0.65));
                rating.antialiasing = true;
                rating.updateHitbox();
                rating.x -= rating.width / 2;
                rating.y -= rating.height / 2;

                game.comboPopUps.add(rating);

                FlxTween.tween(rating, {alpha: 0}, 0.2,
                {
                    onComplete: function(tween:FlxTween) {
                        game.comboPopUps.remove(rating, true);
                        rating.destroy();
                    },
                    startDelay: Conductor.instance.beatLengthMs * 0.001
                });
        }

        var combo = Highscore.tallies.combo;
        if (combo >= 10 || combo == 0) game.comboPopUps.displayCombo(combo);
    }

    function judgeNote(msTiming:Float):String
    {
        var absTiming:Float = Math.abs(msTiming);

        if (absTiming > Scoring.PBOT1_KILLER_THRESHOLD)
            return 'killer';
        return 'miss';
    }
}
