import funkin.modding.base.ScriptedMusicBeatState;
import funkin.modding.base.ScriptedFlxSpriteGroup;
import funkin.modding.base.ScriptedFunkinSprite;
import funkin.modding.base.ScriptedMusicBeatSubState;
import funkin.graphics.FunkinSprite;
import funkin.ui.AtlasText;
import flixel.math.FlxMath;
import flixel.FlxG;
import flixel.text.FlxText;
import flixel.tweens.FlxTween;
import flixel.tweens.FlxEase;
import flixel.addons.display.FlxBackdrop;
import funkin.util.WindowUtil;
import funkin.audio.FunkinSound;
import hxvlc.flixel.FlxVideoSprite;

import StringTools;
class PsychCredits extends ScriptedMusicBeatState
{
    var bg:FunkinSprite;
    var curSelected:Int = -1;

    var grpOptions:ScriptedFlxSpriteGroup;
    var creditsStuff:Array<Array<String>> = [];
	var descText:FlxText;
    var descBox:ScriptedFunkinSprite;
    var offsetThing:Float = -75;
    //shitpostVideo
    var flxVideo:FlxVideoSprite;
    var playedVideo:Bool = false;
    //Name - Icon name - Description - Link
    var defaultList:Array<Array<String>> = [
        ["Tomato Funkin' Credits"],
        ["johfydrawsstuff", "johfy", "Director, Artist, Animator, Charter", "https://twitter.com/johfydrawsstuff"],
        ["EthanX", "ethan-the-sonic", "Composer", "https://twitter.com/hedgehog_ethan"],
        ["Afeefflox", "afeefflox", "Kagami my beloved (he's one of the programmers)", "https://twitter.com/afeefflox_lol"],
        ["Syolk", "syolk", "Composer", "https://www.youtube.com/@yolkproductions5683"],
        ["kromiibytes", "kromiibytes", "Awesome artist who made the second promo art", "https://kromissions.carrd.co/ "],
        ["Binpuki", "binpuki", "Programmer, Did almost everything for Tomato Tusslin',Professional Hater of V-Slice & HaxeFlixel", "https://twitter.com/binpuki_"],
        ["Mikolka", "mikolka", "Programmer", "https://gamebanana.com/members/3329541"],
        ["SakuraCharter", "sakura", "Charter", "https://twitter.com/SakuraCharterR"],
        ["EmiliaFumo", "emi", "Charter", "https://twitter.com/EmiliaFumo08"],
        ["Devi", "devi", "Programmer (no redirect)"],
        ["DumbPNG", "dumb", "Composer (no redirect)"],
        ["Special Thanks"],
        ["Dokibird", "dokibird", "jkterjter", "https://www.youtube.com/watch?v=7o7_2n_JTQ4"],
        ["Linkaimane", "linvt", "Art from ''The Final Heist MV'' used for Promo Art 3 overlay", "https://twitter.com/lin_vt_"],
        ["Mint Fantome", "minto", "freaky ghost maid, metal gear connoisseur", "https://www.youtube.com/live/0I1HAlIzJVo?si=PEbF36MF3SUUMFux&t=9863"],
        ["Dokibird Public Squad", "dps", "Silly Fancord by Dragoons and Bark Knights. Thank you for promoting our mod!", "https://twitter.com/dokibirdsquad"],
        ["legole0", "legole", "Charting help (Tomato Tusslin' Normal)", "https://twitter.com/legole0"],
        ["Special Shoutouts"],
        ["0rcazone", "orca", "Oh, you know why you're here", "https://twitter.com/0rcazone/status/1802524420847902852"],
        ["RiceGnat", "rice", "Rice one of my artist dragoon idols   - johfy", "https://twitter.com/ricegnat"],
        ["Medi Is Cool", "medi", "He said that himself, so he's cool", "https://twitter.com/Medi_is_cool"],
        ["Agito", "agito", "Another cool Dragoon", "https://twitter.com/agito666"],
        ["Thunderwear", "tw", "Man, he loves Doki...", "https://twitter.com/thunderwear1221"],
        [" ", "edwin", " ", "https://youtu.be/7mUj7m66veI?si=YeohNvmI7sZ0LyiP"]
    ];
    override function create()
    {    
        FunkinSound.playMusic('freeplayRandom',
        {
            startingVolume: 0.0,
            overrideExisting: true,
            restartTrack: true,
            loop: true
        });
        FlxG.sound.music.fadeIn(1, 0, 0.8);
        
        bg = FunkinSprite.create(0,0, 'menuBG');
        bg.scrollFactor.set(); 
        bg.setGraphicSize(Std.int(bg.width * 1.2));
        bg.updateHitbox();
        bg.screenCenter();
        add(bg);
        
        grpOptions = new ScriptedFlxSpriteGroup();
		add(grpOptions);

        for(i in defaultList) creditsStuff.push(i);

        for (i in 0...creditsStuff.length)
		{
            var isSelectable:Bool = !unselectableCheck(i);
            var text:AtlasText = new AtlasText(FlxG.width / 2, 300, creditsStuff[i][0], !isSelectable ? 'bold' : 'default');
            text.scrollFactor.set();
            grpOptions.add(text);

            if(isSelectable)
            {
                var icon:ScriptedFunkinSprite = ScriptedFunkinSprite.init("AttachedSprite", 'credits/' + creditsStuff[i][1]);
                icon.scriptSet('yAdd', -10);
                icon.scriptSet('xAdd', text.width + 10);
                icon.scriptSet('sprTracker', text);
				add(icon);

                if(curSelected == -1) curSelected = i;
            }
        }
        grpOptions.screenCenter(0x01);

        descBox = ScriptedFunkinSprite.init("AttachedSprite", '');
        descBox.makeGraphic(1, 1, 0xFF000000);
        descBox.scriptSet('xAdd', -10);
        descBox.scriptSet('yAdd', -10);
        descBox.scriptSet('alphaMult', 0.6);
        descBox.alpha = 0.6;
        add(descBox);

        descText = new FlxText(50, FlxG.height + offsetThing - 25, 1180, "", 32);
        descText.font = Paths.font("vcr.ttf");
        descText.size = 32;
        descText.color = 0xFFFFFFFF;
        descText.alignment = "center";
        descText.scrollFactor.set();
        descBox.scriptSet('sprTracker', descText);
        add(descText);            
        
        flxVideo = new FlxVideoSprite();
        flxVideo.load('mods/Tomato Funkin DEMO/videos/mintoWorst.mp4');
        flxVideo.bitmap.onFormatSetup.add(() -> {
            flxVideo.setGraphicSize(FlxG.width, FlxG.height);
            flxVideo.updateHitbox();
            flxVideo.x = 0;
            flxVideo.y = 0;
        });
        add(flxVideo);

        changeSelection();
    }

    var quitting:Bool = false;
	var holdTime:Float = 0;
	override function update(elapsed:Float)
    {
        super.update(elapsed);

        if (FlxG.sound.music != null && FlxG.sound.music.volume < 0.7) FlxG.sound.music.volume += 0.5 * FlxG.elapsed;

        if(!quitting)
        {
            if(creditsStuff.length > 1)
            {
                var shiftMult:Int = 1;
				if(FlxG.keys.pressed.SHIFT) shiftMult = 3;

                var upP = controls.UI_UP_P;
				var downP = controls.UI_DOWN_P;

				if (upP)
				{
					changeSelection(-shiftMult);
					holdTime = 0;
				}
				if (downP)
				{
					changeSelection(shiftMult);
					holdTime = 0;
				}

                if(controls.UI_DOWN || controls.UI_UP)
				{
					var checkLastHold:Int = Math.floor((holdTime - 0.5) * 10);
					holdTime += elapsed;
					var checkNewHold:Int = Math.floor((holdTime - 0.5) * 10);

					if(holdTime > 0.5 && checkNewHold - checkLastHold > 0)
                        changeSelection((checkNewHold - checkLastHold) * (controls.UI_UP ? -shiftMult : shiftMult));
				}
            }
        }

        if(controls.ACCEPT) 
        {
            FunkinSound.playOnce(Paths.sound('confirmMenu'));

            switch(creditsStuff[curSelected][1])
            {
                case 'afeefflox':
                    openSubState(ScriptedMusicBeatSubState.init('StickerSubStateCredit', 'kagami'));
                case 'minto':
                    if(!playedVideo)
                    {
                        FlxG.sound.music.fadeOut(1, 0, () -> {
                            FlxG.sound.music.pause();
                        });
                        flxVideo.visible = true;
                        flxVideo.play();
                        flxVideo.bitmap.onEndReached.add(() -> {
                            WindowUtil.openURL(creditsStuff[curSelected][3]);
                            flxVideo.destroy();
                            flxVideo.visible = false;
                            FlxG.sound.music.play();
                            FlxG.sound.music.fadeIn(1, 0, 0.8);
                            playedVideo = true;
                        });
                    }
                    else //FlxVideo hate me that you can't replay video again :( -Afeefflox
                    {
                        WindowUtil.openURL(creditsStuff[curSelected][3]);
                    }
                default:
                    WindowUtil.openURL(creditsStuff[curSelected][3]);
            }
        }

        if (controls.BACK)
        {
            FlxG.switchState(() -> ScriptedMusicBeatState.init("CustomMainMenu"));
            FunkinSound.playOnce(Paths.sound('cancelMenu'));
            quitting = true;
        }
    }

    var moveTween:FlxTween = null;
	function changeSelection(change:Int = 0)
    {
        do
        {
            curSelected = FlxMath.wrap(curSelected + change, 0, creditsStuff.length - 1);
        }
        while(unselectableCheck(curSelected));

        if(change != 0)  FunkinSound.playOnce(Paths.sound('scrollMenu'), 0.4);

        for (i in 0...grpOptions.length)
        {
            var isCurrent:Bool = i == curSelected;

            if(!unselectableCheck(i)) grpOptions.members[i].alpha = isCurrent ? 1.0 : 0.6;
            var targetX = FlxMath.remapToRange((i - curSelected), 0, 1, 0, 1.3) * 20 + 100;
            var targetY = FlxMath.remapToRange((i - curSelected), 0, 1, 0, 1.3) * 120 + (FlxG.height * 0.48);
            FlxTween.globalManager.cancelTweensOf(grpOptions.members[i]);
            FlxTween.tween(grpOptions.members[i], {x: targetX, y: targetY}, 0.33, {ease: FlxEase.quartOut});
        }

        descText.text = creditsStuff[curSelected][2];
        
		if(StringTools.trim(descText.text).length > 0)
        {
            descText.visible = descBox.visible = true;
			descText.y = FlxG.height - descText.height + offsetThing - 60;

            if(moveTween != null) moveTween.cancel();
			moveTween = FlxTween.tween(descText, {y : descText.y + 75}, 0.25, {ease: FlxEase.sineOut});

			descBox.setGraphicSize(Std.int(descText.width + 20), Std.int(descText.height + 25));
			descBox.updateHitbox();
        }
        else descText.visible = descBox.visible = false;
    }


    function unselectableCheck(num:Int):Bool {
		return creditsStuff[num].length <= 1;
	}
}